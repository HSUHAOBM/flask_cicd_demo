image: python:3.10

stages:
  - test
  - security
  - sonar
  - notify

variables:
  SONAR_SCANNER_VERSION: "5.0.1.3006"
  SONAR_PROJECT_KEY: "PythonFlaskDockerTest"
  SONAR_HOST_URL: "http://172.25.202.56:9000"
  SONAR_TOKEN: "squ_8faf6d70fda9c3a3d6002b83d56719aa45ec8397"
  SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/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"

before_script:
  - pip install -r requirements.txt || true
  - pip install coverage bandit

test:
  stage: test
  script:
    - coverage run -m unittest discover
    - coverage xml
  artifacts:
    paths:
      - coverage.xml
    expire_in: 1 hour

security_scan:
  stage: security
  script: |
    bandit -r . | tee bandit_report.txt
    issues_high=$(grep -c "Severity: High" bandit_report.txt || true)
    issues_medium=$(grep -c "Severity: Medium" bandit_report.txt || true)

    curl -X POST -H "Content-type: application/json" --data "{
      \"text\": \"🔐 Bandit 掃描完成：\\n- 高風險：$issues_high\\n- 中風險：$issues_medium\\n📦 Job: $CI_JOB_URL\"
    }" $SLACK_WEBHOOK_URL

sonarqube:
  stage: sonar
  image: eclipse-temurin:17
  script:
    - apt-get update && apt-get install -y wget unzip
    - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
    - unzip sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip
    - export PATH="$PWD/sonar-scanner-${SONAR_SCANNER_VERSION}/bin:$PATH"

    - sonar-scanner \
        -Dsonar.projectKey=$SONAR_PROJECT_KEY \
        -Dsonar.sources=. \
        -Dsonar.host.url=$SONAR_HOST_URL \
        -Dsonar.login=$SONAR_TOKEN \
        -Dsonar.python.coverage.reportPaths=coverage.xml
  dependencies:
    - test

notify:
  stage: notify
  when: on_success
  script: |
    curl -X POST -H "Content-type: application/json" --data "{
      \"text\": \"✅ GitLab CI 成功：\\n📦 專案: $CI_PROJECT_PATH\\n🌿 分支: $CI_COMMIT_REF_NAME\\n🧑 作者: $GITLAB_USER_NAME\\n🔗 Job: $CI_JOB_URL\"
    }" $SLACK_WEBHOOK_URL





